{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { server } from '../../../config';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Meta from '../../../components/Meta';\n\nconst question = ({\n  question\n}) => {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: question.question,\n      description: question.excerpt\n    }), /*#__PURE__*/_jsx(\"h1\", {\n      children: question.question\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: question.answer\n    }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Link, {\n      href: \"/\",\n      children: \"Go Back\"\n    })]\n  });\n};\n\nexport const getStaticProps = async context => {\n  const res = await fetch(`${server}/api/questions/${context.params.id}`);\n  const question = await res.json();\n  return {\n    props: {\n      question\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const res = await fetch(`${server}/api/questions`);\n  const questions = await res.json();\n  const ids = questions.map(question => question.id);\n  const paths = ids.map(id => ({\n    params: {\n      id: id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport default question;","map":null,"metadata":{},"sourceType":"module"}