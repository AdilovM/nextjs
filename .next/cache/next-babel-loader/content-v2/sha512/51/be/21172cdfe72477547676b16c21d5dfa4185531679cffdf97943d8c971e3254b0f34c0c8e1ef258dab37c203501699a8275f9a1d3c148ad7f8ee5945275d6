{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mirasadilov/Desktop/nextjs/pages/article/[id]/index.js\";\nimport { server } from '../../../config';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Meta from '../../../components/Meta';\n\nconst question = ({\n  question\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: question.question,\n      description: question.excerpt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: question.answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getStaticProps = async context => {\n  const res = await fetch(`${server}/api/questions/${context.params.id}`);\n  const question = await res.json();\n  return {\n    props: {\n      question\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const res = await fetch(`${server}/api/questions`);\n  const questions = await res.json();\n  const ids = questions.map(question => question.id);\n  const paths = ids.map(id => ({\n    params: {\n      id: id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport default question;","map":{"version":3,"sources":["/Users/mirasadilov/Desktop/nextjs/pages/article/[id]/index.js"],"names":["server","Link","useRouter","Meta","question","excerpt","answer","getStaticProps","context","res","fetch","params","id","json","props","getStaticPaths","questions","ids","map","paths","toString","fallback"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAkB;AACjC,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,QAAQ,CAACA,QAAtB;AAAgC,MAAA,WAAW,EAAEA,QAAQ,CAACC;AAAtD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKD,QAAQ,CAACA;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAIA,QAAQ,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CAVD;;AAYA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEV,MAAO,kBAAiBQ,OAAO,CAACG,MAAR,CAAeC,EAAG,EAA9C,CAAvB;AAEA,QAAMR,QAAQ,GAAG,MAAMK,GAAG,CAACI,IAAJ,EAAvB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLV,MAAAA;AADK;AADF,GAAP;AAKD,CAVM;AAYP,OAAO,MAAMW,cAAc,GAAG,YAAY;AACxC,QAAMN,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEV,MAAO,gBAAX,CAAvB;AAEA,QAAMgB,SAAS,GAAG,MAAMP,GAAG,CAACI,IAAJ,EAAxB;AAEA,QAAMI,GAAG,GAAGD,SAAS,CAACE,GAAV,CAAed,QAAD,IAAcA,QAAQ,CAACQ,EAArC,CAAZ;AACA,QAAMO,KAAK,GAAGF,GAAG,CAACC,GAAJ,CAASN,EAAD,KAAS;AAAED,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAEA,EAAE,CAACQ,QAAH;AAAN;AAAV,GAAT,CAAR,CAAd;AAEA,SAAO;AACLD,IAAAA,KADK;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CAZM;AAcP,eAAejB,QAAf","sourcesContent":["import { server } from '../../../config'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport Meta from '../../../components/Meta'\n\nconst question = ({ question }) => {\n  return (\n    <>\n      <Meta title={question.question} description={question.excerpt} />\n      <h1>{question.question}</h1>\n      <p>{question.answer}</p>\n      <br />\n      <Link href='/'>Go Back</Link>\n    </>\n  )\n}\n\nexport const getStaticProps = async (context) => {\n  const res = await fetch(`${server}/api/questions/${context.params.id}`)\n\n  const question = await res.json()\n\n  return {\n    props: {\n      question,\n    },\n  }\n}\n\nexport const getStaticPaths = async () => {\n  const res = await fetch(`${server}/api/questions`)\n\n  const questions = await res.json()\n\n  const ids = questions.map((question) => question.id)\n  const paths = ids.map((id) => ({ params: { id: id.toString() } }))\n\n  return {\n    paths,\n    fallback: false,\n  }\n}\n\nexport default question\n"]},"metadata":{},"sourceType":"module"}