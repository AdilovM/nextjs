{"ast":null,"code":"import { questions } from '../../../data';\nexport default function handler({\n  query: {\n    id\n  }\n}, res) {\n  const filtered = questions.filter(question => question.id === id);\n\n  if (filtered.length > 0) {\n    res.status(200).json(filtered[0]);\n  } else {\n    res.status(404).json({\n      message: `Question with the id of ${id} is not found`\n    });\n  }\n}","map":{"version":3,"sources":["/Users/mirasadilov/Desktop/nextjs/pages/api/questions/[id].js"],"names":["questions","handler","query","id","res","filtered","filter","question","length","status","json","message"],"mappings":"AAAA,SAASA,SAAT,QAA0B,eAA1B;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAjB,EAAoCC,GAApC,EAAyC;AACtD,QAAMC,QAAQ,GAAGL,SAAS,CAACM,MAAV,CAAkBC,QAAD,IAAcA,QAAQ,CAACJ,EAAT,KAAgBA,EAA/C,CAAjB;;AAEA,MAAIE,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvBJ,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,QAAQ,CAAC,CAAD,CAA7B;AACD,GAFD,MAEO;AACLD,IAAAA,GAAG,CACAK,MADH,CACU,GADV,EAEGC,IAFH,CAEQ;AAAEC,MAAAA,OAAO,EAAG,2BAA0BR,EAAG;AAAzC,KAFR;AAGD;AACF","sourcesContent":["import { questions } from '../../../data'\n\nexport default function handler({ query: { id } }, res) {\n  const filtered = questions.filter((question) => question.id === id)\n\n  if (filtered.length > 0) {\n    res.status(200).json(filtered[0])\n  } else {\n    res\n      .status(404)\n      .json({ message: `Question with the id of ${id} is not found` })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}